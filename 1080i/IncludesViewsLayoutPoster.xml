<?xml version="1.0" encoding="utf-8"?>
<!-- TITAN MOD -->
<includes>

	<!-- POSTER LAYOUT -->
	<include name="PosterPanelLayout">
		<control type="image">
			<animation effect="zoom" end="102,102" time="0" condition="Skin.HasSetting(CaseOverlays)">Conditional</animation>
			<texture border="0">diffuse/poster.png</texture>
			<colordiffuse>$PARAM[colordiffuse]</colordiffuse>
			<include condition="Skin.String($PARAM[border], 0)">thumbborder_0</include>
			<include condition="Skin.String($PARAM[border], 2)">thumbborder_2</include>
			<include condition="Skin.String($PARAM[border], 4)">thumbborder_4</include>
			<include condition="Skin.String($PARAM[border], 6)">thumbborder_6</include>
		</control>
		<control type="image">
			<colordiffuse></colordiffuse>
			<description>Normal Poster thumb stretched aspect</description>
			<texture border="1" background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png">$VAR[PosterThumbList]</texture>
			<aspectratio scalediffuse="true" aligny="bottom" align="center">stretch</aspectratio>
			<bordersize>8</bordersize>
			<visible>!String.IsEmpty(ListItem.Art(poster)) | !String.IsEmpty(ListItem.Art(tvshow.poster))</visible>
		</control>
		<control type="image">
			<colordiffuse></colordiffuse>
			<description>Fallback Poster thumb keep aspect for all other</description>
			<texture border="1" background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png">$VAR[PosterThumbList]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="center">keep</aspectratio>
			<bordersize>8</bordersize>
			<visible>String.IsEmpty(ListItem.Art(poster)) + String.IsEmpty(ListItem.Art(tvshow.poster))</visible>
		</control>
		<include condition="!Window.IsActive(Home)">PosterTagOverlay</include>
		<control type="group">
			<include condition="Skin.HasSetting(CaseOverlays)">PosterCaseOverlay</include>
		</control>
		<control type="group">
			<right>8</right>
			<top>8</top>
			<include>$PARAM[WatchedIndicator]</include>
			<animation type="Conditional" condition="skin.hastheme(classic)">
				<effect type="slide" end="3,-3" time="0" />
			</animation>
			<animation type="Conditional" condition="Skin.HasSetting(CaseOverlays)">
				<effect type="slide" end="6,0" time="0" />
			</animation>
		</control>
	</include>
	
	<!-- GENERIC LAYOUT FOR POSTERS -->
	<include name="PosterThumb">
		<texture border="0">diffuse/poster.png</texture>
		<colordiffuse>$PARAM[colordiffuse]</colordiffuse>
	</include>
	
	<include name="PosterTagOverlayVisibility">
		<visible>!String.IsEqual(ListItem.Label,..)</visible>
		<visible>!Window.IsActive(script-skin_helper_service-CustomSearch.xml)</visible>
		<visible>
            [[String.Contains(Window.Property(xmlfile),Nav) | Window.Isactive(Home)] + String.IsEmpty(ListItem.Art(poster)) + String.IsEmpty(ListItem.Art(tvshow.poster))] | 
            [Window.IsActive(script-ExtendedInfo Script-DialogVideoInfo.xml) + String.IsEmpty(ListItem.Art(fanart))] | 
            [!String.IsEmpty(ListItem.Episode) + !String.IsEmpty(ListItem.Season) + !Container.Content(seasons) + !String.IsEqual(ListItem.Label, ListItem.TvshowTitle) + Skin.HasSetting(ShowLabelsPosterEpisodes)]
		</visible>
	</include>
	<!-- rework needed, ..-->
	<include name="PosterTagOverlay">
		<control type="group">
			<include condition="!Window.IsActive(Home)">PosterTagOverlayVisibility</include>
			<!--Panel-->
			<control type="image">
				<bottom>0</bottom>
				<height>80</height>
				<bordersize>8</bordersize>
				<texture border="1">diffuse/poster_tag.png</texture>
				<colordiffuse>$INFO[Skin.String(TagOverlaysPanelColor)]</colordiffuse>
			</control>
			<control type="textbox">
				<left>15</left>
				<right>15</right>
				<bottom>10</bottom>
				<height>65</height>
				<include condition="Skin.HasSetting(ThumbsLabelAlignmentCenter)">aligncenter</include>
				<align>left</align>
				<aligny>center</aligny>
				<label>$VAR[ThumbListDetailsPoster]</label>
				<font>Reg22</font>
				<autoscroll delay="2000" time="2000" repeat="500">false</autoscroll>
				<textcolor>$INFO[Skin.String(TagOverlaysTextColor)]</textcolor>
				<visible>!String.IsEqual(System.CurrentControl,ListItem.Label)</visible>
			</control>
			<control type="textbox">
				<left>15</left>
				<right>15</right>
				<bottom>10</bottom>
				<height>65</height>
				<include condition="Skin.HasSetting(ThumbsLabelAlignmentCenter)">aligncenter</include>
				<align>left</align>
				<aligny>center</aligny>
				<label>$VAR[ThumbListDetailsPoster]</label>
				<font>Reg22</font>
				<autoscroll delay="2000" time="2000" repeat="500">true</autoscroll>
				<textcolor>$INFO[Skin.String(TagOverlaysTextColor)]</textcolor>
				<visible>String.IsEqual(System.CurrentControl,ListItem.Label)</visible>
			</control>
		</control>
	</include>
	
	<!-- CASE OVERLAYS -->
	<include name="PosterCaseOverlay">
		<control type="group">
			<visible>
                !String.IsEqual(Skin.String(CaseOverlays.Fallback),None) | 
                String.Contains(ListItem.Filenameandpath,.3d) | 
                Integer.IsGreater(ListItem.VideoResolution,1080) | String.Contains(ListItem(0).Filenameandpath,4k) |
                [String.Contains(ListItem.FilenameAndPath,bdmv) | String.Contains(ListItem.FilenameAndPath,blu-ray) | String.Contains(ListItem.FilenameAndPath,bluray) | String.Contains(ListItem.FilenameAndPath,bdrip) | String.Contains(ListItem.FilenameAndPath,bd25) | String.Contains(ListItem.FilenameAndPath,bd50)] | 
                String.EndsWith(ListItem.Filenameandpath,dvd) | String.EndsWith(ListItem.Filenameandpath,.ifo) | String.Contains(ListItem.Filenameandpath,.iso) | 
                String.IsEqual(ListItem.VideoResolution,480) | String.IsEqual(ListItem.VideoResolution,540) | String.IsEqual(ListItem.VideoResolution,576) | String.IsEqual(ListItem.VideoResolution,720) | String.IsEqual(ListItem.VideoResolution,1080) | String.StartsWith(ListItem.Path,videodb://movies/sets)
			</visible>
			<visible>!String.IsEmpty(ListItem.Art(poster)) | !String.IsEmpty(ListItem.Art(tvshow.poster))</visible>
			<control type="image">
				<texture diffuse="diffuse/poster.png">cases/default_top2.png</texture>
				<!-- border left,top,right,bottom  -->
				<bordersize>7,7,7,7</bordersize>
				<colordiffuse>$INFO[Skin.String(CaseOverlays.Color)]</colordiffuse>
				<animation effect="zoom" end="102.1,102" time="0" condition="true">Conditional</animation>
			</control>
			<control type="image">
				<texture background="true">$VAR[PosterCaseOverlayVar]</texture>
				<top>5</top>
				<left>25%</left>
				<width>50%</width>
				<height>9%</height>
				<aspectratio aligny="center" align="center">keep</aspectratio>
				<!-- border left,top,right,bottom  -->
				<bordersize>2,2,2,2</bordersize>
				<colordiffuse>$INFO[Skin.String(CaseOverlays.TextColor)]</colordiffuse>
			</control>
		</control>
	</include>
	
	<variable name="PosterCaseOverlayVar">
		<value condition="String.Contains(ListItem.Filenameandpath,.3d)">cases/3dbd.png</value>
		<value condition="Integer.IsGreater(ListItem.VideoResolution,1080) | String.Contains(ListItem(0).Filenameandpath,4k)">cases/4k.png</value>
		<value condition="[String.Contains(ListItem.FilenameAndPath,bdmv) | String.Contains(ListItem.FilenameAndPath,blu-ray) | String.Contains(ListItem.FilenameAndPath,bluray) | String.Contains(ListItem.FilenameAndPath,bdrip) | String.Contains(ListItem.FilenameAndPath,bd25) | String.Contains(ListItem.FilenameAndPath,bd50)]">cases/bluray.png</value>
		<value condition="String.EndsWith(ListItem.Filenameandpath,dvd) | String.EndsWith(ListItem.Filenameandpath,.ifo) | String.EndsWith(ListItem.Filenameandpath,.iso)">cases/dvd.png</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,480)">cases/480.png</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,540)">cases/540.png</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,576)">cases/576.png</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,720)">cases/720.png</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,1080)">cases/1080.png</value>
		<value condition="String.StartsWith(ListItem.Path,videodb://movies/sets)">cases/set.png</value>
		<value condition="String.IsEqual(Skin.String(CaseOverlays.Fallback),HD1080)">cases/1080.png</value>
		<value condition="String.IsEqual(Skin.String(CaseOverlays.Fallback),DVD)">cases/dvd.png</value>
		<value condition="String.IsEqual(Skin.String(CaseOverlays.Fallback),Bluray)">cases/bluray.png</value>
	</variable>

	<!-- Poster thumb vars -->
	<variable name="PosterThumb">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.AnimatedPoster))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.AnimatedPoster)]</value>
		<value condition="Container.Content(seasons) + String.StartsWith(ListItem.Label,*) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="Container.Content(seasons) + !String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)] + !String.IsEmpty(Container.Art(season.poster)) + !String.Contains(Container.FolderPath,season=-)">$INFO[Container.Art(season.poster)]</value>
		<value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)] + !String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
		<value condition="Container.Content(seasons) + !String.IsEmpty(Container.Art(poster))">$INFO[Container.Art(poster)]</value>
		<value condition="Container.Content(seasons) + !String.IsEmpty(Container.Art(tvshow.poster))">$INFO[Container.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Poster))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(poster))">$INFO[ListItem.Property(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(tvshow.poster))">$INFO[ListItem.Property(tvshow.poster)]</value>
		<value condition="String.Contains(Container.FolderPath,pvr://) + String.IsEqual(Container.ListItem.Label,ListItem.Label)">$VAR[PVRThumb]</value>
		<value condition="!String.IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
		<value condition="String.IsEqual(ListItem.Label,..)">dialogs/filebrowser/DefaultFolderBack.png</value>
		<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[21452])">dialogs/filebrowser/DefaultAddSource.png</value>
		<value condition="[Container.Content(genres) | String.IsEqual(ListItem.DBTYPE,genre)] + !String.Contains(ListItem.FolderPath,music)">$VAR[MovieGenreIconVar]</value>
		<value condition="[Container.Content(genres) | String.IsEqual(ListItem.DBTYPE,genre)] + String.Contains(ListItem.FolderPath,music)">$VAR[MusicGenreIconVar]</value>
		<value condition="[Container.Content(studios) | String.IsEqual(ListItem.DBTYPE,studio)] + !String.IsEmpty(Window(home).Property(SkinHelper.ListItem.StudioLogo))">$INFO[Window(home).Property(SkinHelper.ListItem.StudioLogo)]</value>
		<!-- $INFO[Skin.String(SkinHelper.studiologos.path)]$INFO[ListItem.Label].png
		default <value condition="[Container.Content(studios) | String.IsEqual(ListItem.DBTYPE,studio)] + !String.IsEmpty(Window(home).Property(SkinHelper.ListItem.StudioLogo))">$INFO[Window(home).Property(SkinHelper.ListItem.StudioLogo)]</value> -->
		<value condition="Container.Content(actors) + String.IsEmpty(ListItem.Thumb)">DefaultActorPoster.png</value>
		<value condition="Container.Content(directors) + String.IsEmpty(ListItem.Thumb)">DefaultActorPoster.png</value>
		<value condition="Container.Content(years)">DefaultYear.png</value>
		<value condition="Container.Content(countries)">DefaultCountry.png</value>
	  	<!-- 
		<value condition="Container.Content(countries)">resource://resource.images.skinicons.wide/Country.png</value> -->
		<value condition="Container.Content(tags)">DefaultTags.png</value>
		<value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
	</variable>

	<variable name="PosterThumbList"> <!-- check e.g PreferColorStudioLogos - just a bool inside themes, not found in skinsettings itself -->
		<value condition="$EXP[InGameMode]">$INFO[ListItem.Icon]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster)) + ListItem.IsCollection + String.Contains(ListItem.Art(poster),emby)">$INFO[ListItem.Art(poster)]&amp;EnableImageEnhancers=false</value>
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(ListItem.Art(animatedposter)) + !Window.IsActive(Home) + !Skin.HasSetting(AnimatedPostersDisableList)">$INFO[ListItem.Art(animatedposter)]</value>
		<value condition="Container.Content(seasons) + String.StartsWith(ListItem.Label,*) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="Container.Content(seasons) + !String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
		<value condition="!String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(poster))">$INFO[ListItem.Property(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
		<value condition="String.IsEqual(ListItem.Label,..)">dialogs/filebrowser/DefaultFolderBack.png</value>
		<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[21452])">dialogs/filebrowser/DefaultAddSource.png</value>
		<value condition="[Container.Content(genres) | String.IsEqual(ListItem.DBTYPE,genre)] + String.Contains(ListItem.FolderPath,music)">$VAR[MusicGenreIconVarList]</value>
		<value condition="[Container.Content(genres) | String.IsEqual(ListItem.DBTYPE,genre)]">$VAR[MovieGenreIconVarList]</value>
		<value condition="Container.Content(studios)">$INFO[Skin.String(SkinHelper.studiologos.path)]$INFO[ListItem.Label].png</value>
		<value condition="Container.Content(actors) + String.IsEmpty(ListItem.Thumb)">DefaultActorPoster.png</value>
		<value condition="Container.Content(directors) + String.IsEmpty(ListItem.Thumb)">DefaultActorPoster.png</value>
		<value condition="!String.IsEmpty(ListItem.Property(character)) + String.IsEmpty(ListItem.Thumb)">DefaultActorPoster.png</value>
		<value condition="!String.IsEmpty(ListItem.Property(job)) + String.IsEmpty(ListItem.Thumb)">DefaultActorPoster.png</value>
		<value condition="Container.Content(years)">DefaultYear.png</value>
		<value condition="Container.Content(countries)">DefaultCountry.png</value>
		<value condition="Container.Content(tags)">DefaultTags.png</value>
		<value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
	</variable>
	
</includes>